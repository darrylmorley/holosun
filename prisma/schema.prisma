generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id            Int             @id @unique
  name          String
  fullPathName  String
  parentID      Int?
  nodeDepth     Int?
  leftNode      Int?
  rightNode     Int?
  description   String?
  image         String?
  slug          String
  Product       Product[]
  matrixProduct matrixProduct[]
}

model Gun {
  id              String  @id
  itemID          String
  archived        Boolean
  description     String?
  customSku       String
  manufacturerSku String?
  categoryID      Int
  itemMatrixID    Int
  manufacturerID  Int
  Category        Json?
  ItemAttributes  Json?
  Manufacturer    Json?
  ItemShops       Json?
  Images          Json?
  ItemECommerce   Json?
  Prices          Json
}

model Image {
  id          Int     @id @unique
  itemID      Int
  description String?
  url         String
  isDefault   Boolean @default(false)
  sortOrder   Int
}

model Manufacturer {
  id            Int             @id @unique
  name          String
  description   String?
  image         String?
  slug          String          @unique
  Product       Product[]
  matrixProduct matrixProduct[]
}

model Product {
  id                Int           @id @unique
  matrixID          Int
  sku               String
  manufacturerSku   String
  gtin              String?
  name              String
  qoh               Int
  price             Float
  salePrice         Float
  onSale            Boolean?      @default(false)
  reorderLevel      Int?
  reorderPoint      Int?
  isOnBackorder     Boolean?      @default(false)
  backorderQty      Int?
  shortDescription  String?
  longDescription   String?
  categoryID        Int?
  Category          Json?
  manufacturerID    Int?
  Manufacturer      Json?
  colour            String?
  size              String?
  width             String?
  height            String?
  length            String?
  weight            String?
  listOnWebsite     Boolean?      @default(true)
  metaTitle         String?
  metaDescription   String?
  isPreorder        Boolean?      @default(false)
  preOrderQty       Int?
  slug              String        @unique
  Images            Json?
  ItemAttributes    Json?
  CustomFieldValues Json?
  ItemECommerce     Json?
  ItemShops         Json?
  category          Category?     @relation(fields: [categoryID], references: [id])
  manufacturer      Manufacturer? @relation(fields: [manufacturerID], references: [id])
  Review            Review[]
}

model Review {
  id        String  @id
  itemID    Int
  user      String
  userEmail String
  rating    Int
  Product   Product @relation(fields: [itemID], references: [id])
}

model matrixProduct {
  id               Int           @id @unique
  name             String
  categoryID       Int?
  Category         Json?
  manufacturerID   Int?
  Manufacturer     Json?
  ItemAttributeSet Json?
  Items            Json?
  Images           Json?
  price            Float
  salePrice        Float
  shortDescription String?
  longDescription  String?
  slug             String        @unique
  category         Category?     @relation(fields: [categoryID], references: [id])
  manufacturer     Manufacturer? @relation(fields: [manufacturerID], references: [id])
}

model category_name_change_log {
  id               Int       @id @default(autoincrement())
  category_id      Int?
  field_name       String?
  old_value        String?
  new_value        String?
  change_timestamp DateTime? @default(now()) @db.Timestamptz(6)
}

model manufacturer_name_change_log {
  id               Int       @id @default(autoincrement())
  manufacturer_id  Int?
  field_name       String?
  old_value        String?
  new_value        String?
  change_timestamp DateTime? @default(now()) @db.Timestamptz(6)
}

model product_change_log {
  id               Int       @id @default(autoincrement())
  product_id       Int?
  field_name       String?
  old_value        Json?
  new_value        Json?
  change_timestamp DateTime? @default(now()) @db.Timestamptz(6)
}

model product_sku_change_log {
  id               Int       @id @default(autoincrement())
  product_id       Int?
  field_name       String?
  old_value        String?
  new_value        String?
  change_timestamp DateTime? @default(now()) @db.Timestamptz(6)
}
